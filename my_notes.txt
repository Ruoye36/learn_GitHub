repository - warehouse. Has a .git file which is a version storage.
commit - game save; snapshot
working directory
stage - temporary storage for files to commit
fast-forward - make the main pointer point to the to-be-merged branch commit directly
             - without which git creates a new commit
BRANCH EARLY AND BRANCH OFTEN
----- git commands to be reviewed -----
git init
git add <filename>
git commit -m "comment"
git status
git log <--pretty=oneline>
git reset <--hard> <HEAD^>  //used to restore the last version
          <HEAD> <file> //used to restore a committed change to stage (unstaging)
git reflog
git diff <HEAD> -- <readme.txt>
git checkout <--> <readme.txt>
ssh-keygen -t rsa -C "youremail@example.com"
git remote add origin git@github.com:your_github_username/your_remote_repo_name.git
           rm origin    //unbind local repo from corresponding remote repo, does not actually delete anything
git push origin master
git clone git@github.com:your_github_username/your_remote_repo_name.git
git checkout -b branch_name == git switch -c dev
git merge dev   //on local branch main, merging local branch dev
          --no-ff -m "merge with no-ff" dev //merge without fast-forward
git branch -d branch_name
git 
